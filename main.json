{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "16962041826588551145"
    }
  },
  "parameters": {
    "resourcePrefix": {
      "type": "string"
    },
    "ownerId": {
      "type": "string"
    },
    "acmeBot": {
      "type": "string"
    },
    "publisherEmail": {
      "type": "string"
    },
    "publisherName": {
      "type": "string",
      "defaultValue": "Henrik Becker Consulting AB"
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourcePrefix')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-net', parameters('resourcePrefix'))]",
      "resourceGroup": "[parameters('resourcePrefix')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.54.24096",
              "templateHash": "12260520914009957913"
            }
          },
          "parameters": {
            "zoneName": {
              "type": "string",
              "defaultValue": "henrikbecker.net"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}.ip', parameters('zoneName'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "publicIPAllocationMethod": "Dynamic"
              }
            },
            {
              "type": "Microsoft.Network/dnsZones",
              "apiVersion": "2018-05-01",
              "name": "[parameters('zoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/dnsZones/CNAME",
              "apiVersion": "2018-05-01",
              "name": "[format('{0}/{1}', parameters('zoneName'), 'www')]",
              "properties": {
                "TTL": 3600,
                "CNAMERecord": {
                  "cname": "handiman.github.io."
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/dnsZones', parameters('zoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/dnsZones/CNAME",
              "apiVersion": "2018-05-01",
              "name": "[format('{0}/{1}', parameters('zoneName'), 'em931')]",
              "properties": {
                "TTL": 3600,
                "CNAMERecord": {
                  "cname": "u23254236.wl237.sendgrid.net."
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/dnsZones', parameters('zoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/dnsZones/CNAME",
              "apiVersion": "2018-05-01",
              "name": "[format('{0}/{1}', parameters('zoneName'), 's1._domainkey')]",
              "properties": {
                "TTL": 3600,
                "CNAMERecord": {
                  "cname": "s1.domainkey.u23254236.wl237.sendgrid.net."
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/dnsZones', parameters('zoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/dnsZones/CNAME",
              "apiVersion": "2018-05-01",
              "name": "[format('{0}/{1}', parameters('zoneName'), 's2._domainkey')]",
              "properties": {
                "TTL": 3600,
                "CNAMERecord": {
                  "cname": "s2.domainkey.u23254236.wl237.sendgrid.net."
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/dnsZones', parameters('zoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/dnsZones/TXT",
              "apiVersion": "2018-05-01",
              "name": "[format('{0}/{1}', parameters('zoneName'), '@')]",
              "properties": {
                "TTL": 3600,
                "TXTRecords": [
                  {
                    "value": [
                      "google-site-verification=O0mm2i3lLjHQBC1L6jhBXg6MaS1Mi-KSOcfkSzGiYv8"
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/dnsZones', parameters('zoneName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourcePrefix'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-resources', parameters('resourcePrefix'))]",
      "resourceGroup": "[parameters('resourcePrefix')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ownerId": {
            "value": "[parameters('ownerId')]"
          },
          "resourcePrefix": {
            "value": "[parameters('resourcePrefix')]"
          },
          "publisherName": {
            "value": "[parameters('publisherName')]"
          },
          "publisherEmail": {
            "value": "[parameters('publisherEmail')]"
          },
          "acmeBotFunctionAppName": {
            "value": "[parameters('acmeBot')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.54.24096",
              "templateHash": "7841161232216130984"
            }
          },
          "parameters": {
            "ownerId": {
              "type": "string"
            },
            "publisherEmail": {
              "type": "string"
            },
            "publisherName": {
              "type": "string"
            },
            "acmeBotFunctionAppName": {
              "type": "string"
            },
            "resourcePrefix": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "vaultName": "[format('{0}-vault', parameters('resourcePrefix'))]",
            "topicName": "[parameters('resourcePrefix')]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}/{1}', variables('vaultName'), 'add')]",
              "properties": {
                "accessPolicies": [
                  {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('acmeBotFunctionAppName')), '2021-02-01', 'full').identity.principalId]",
                    "permissions": {
                      "certificates": [
                        "backup",
                        "create",
                        "delete",
                        "deleteissuers",
                        "get",
                        "getissuers",
                        "import",
                        "list",
                        "listissuers",
                        "managecontacts",
                        "manageissuers",
                        "recover",
                        "restore",
                        "setissuers",
                        "update"
                      ]
                    }
                  },
                  {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[parameters('ownerId')]",
                    "permissions": {
                      "keys": [
                        "get",
                        "list",
                        "update",
                        "create",
                        "import",
                        "delete",
                        "recover",
                        "backup",
                        "restore"
                      ],
                      "secrets": [
                        "get",
                        "list",
                        "set",
                        "delete",
                        "recover",
                        "backup",
                        "restore"
                      ],
                      "certificates": [
                        "get",
                        "list",
                        "update",
                        "create",
                        "import",
                        "delete",
                        "recover",
                        "backup",
                        "restore",
                        "managecontacts",
                        "manageissuers",
                        "getissuers",
                        "listissuers",
                        "setissuers",
                        "deleteissuers"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.EventGrid/topics",
              "apiVersion": "2021-12-01",
              "name": "[variables('topicName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "inputSchema": "EventGridSchema"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[format('{0}-workspace', parameters('resourcePrefix'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', variables('vaultName'), 'AzureAd--TenantId')]",
              "properties": {
                "value": "[subscription().tenantId]",
                "contentType": "string"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', variables('vaultName'), 'AzureAd--Instance')]",
              "properties": {
                "value": "[environment().authentication.loginEndpoint]",
                "contentType": "uri"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', variables('vaultName'), 'EventGridAccessKey')]",
              "properties": {
                "value": "[listKeys(resourceId('Microsoft.EventGrid/topics', variables('topicName')), '2021-12-01').key1]",
                "contentType": "string"
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventGrid/topics', variables('topicName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-registry', parameters('resourcePrefix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.54.24096",
                      "templateHash": "11323316066376980188"
                    }
                  },
                  "parameters": {
                    "prefix": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().name]"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ContainerRegistry/registries",
                      "apiVersion": "2023-06-01-preview",
                      "name": "[parameters('prefix')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Basic"
                      },
                      "properties": {
                        "adminUserEnabled": false,
                        "anonymousPullEnabled": false,
                        "dataEndpointEnabled": false,
                        "publicNetworkAccess": "Enabled",
                        "networkRuleBypassOptions": "AzureServices",
                        "zoneRedundancy": "Disabled",
                        "policies": {
                          "quarantinePolicy": {
                            "status": "disabled"
                          },
                          "trustPolicy": {
                            "type": "Notary",
                            "status": "disabled"
                          },
                          "retentionPolicy": {
                            "days": 7,
                            "status": "disabled"
                          },
                          "exportPolicy": {
                            "status": "enabled"
                          },
                          "azureADAuthenticationAsArmPolicy": {
                            "status": "enabled"
                          },
                          "softDeletePolicy": {
                            "retentionDays": 7,
                            "status": "disabled"
                          }
                        },
                        "encryption": {
                          "status": "disabled"
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-backend-vnet', parameters('resourcePrefix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.54.24096",
                      "templateHash": "12472606679301214885"
                    }
                  },
                  "parameters": {
                    "resourcePrefix": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().name]"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    }
                  },
                  "variables": {
                    "defaultSubnetAddressPrefix": "10.0.0.0/24"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualnetworks",
                      "apiVersion": "2015-05-01-preview",
                      "name": "[format('{0}-backend-vnet', parameters('resourcePrefix'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "addressSpace": {
                          "addressPrefixes": [
                            "10.0.0.0/16"
                          ]
                        },
                        "subnets": [
                          {
                            "name": "default",
                            "properties": {
                              "addressPrefix": "[variables('defaultSubnetAddressPrefix')]"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworks/subnets",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/{1}', format('{0}-backend-vnet', parameters('resourcePrefix')), 'default')]",
                      "properties": {
                        "addressPrefix": "[variables('defaultSubnetAddressPrefix')]",
                        "serviceEndpoints": [
                          {
                            "service": "Microsoft.KeyVault",
                            "locations": [
                              "*"
                            ]
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualnetworks', format('{0}-backend-vnet', parameters('resourcePrefix')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualnetworks', format('{0}-backend-vnet', parameters('resourcePrefix')))]"
                    },
                    "subnetId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}-backend-vnet', parameters('resourcePrefix')), 'default')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-config', parameters('resourcePrefix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.54.24096",
                      "templateHash": "10891393349343852659"
                    }
                  },
                  "parameters": {
                    "resourcePrefix": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().name]"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.AppConfiguration/configurationStores",
                      "apiVersion": "2021-03-01-preview",
                      "name": "[format('{0}-config', parameters('resourcePrefix'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "free"
                      },
                      "identity": {
                        "type": "SystemAssigned"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-storage', parameters('resourcePrefix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.54.24096",
                      "templateHash": "10944549018341442476"
                    }
                  },
                  "parameters": {
                    "resourceName": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().name]"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-02-01",
                      "name": "[parameters('resourceName')]",
                      "location": "[parameters('location')]",
                      "kind": "StorageV2",
                      "sku": {
                        "name": "Standard_LRS"
                      },
                      "properties": {
                        "accessTier": "Cool",
                        "supportsHttpsTrafficOnly": true,
                        "minimumTlsVersion": "TLS1_2"
                      }
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices",
                      "apiVersion": "2021-04-01",
                      "name": "[format('{0}/{1}', parameters('resourceName'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('resourceName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2021-04-01",
                      "name": "[format('{0}/{1}/{2}', parameters('resourceName'), 'default', 'public')]",
                      "properties": {
                        "publicAccess": "Blob"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('resourceName'), 'default')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/fileServices",
                      "apiVersion": "2021-04-01",
                      "name": "[format('{0}/{1}', parameters('resourceName'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('resourceName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/queueServices",
                      "apiVersion": "2021-04-01",
                      "name": "[format('{0}/{1}', parameters('resourceName'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('resourceName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
                      "apiVersion": "2021-04-01",
                      "name": "[format('{0}/{1}/{2}', parameters('resourceName'), 'default', 'contact-form')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('resourceName'), 'default')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
                      "apiVersion": "2021-04-01",
                      "name": "[format('{0}/{1}/{2}', parameters('resourceName'), 'default', 'salary-file')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('resourceName'), 'default')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/tableServices",
                      "apiVersion": "2021-04-01",
                      "name": "[format('{0}/{1}', parameters('resourceName'), 'default')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', parameters('resourceName'))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-apim', parameters('resourcePrefix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "publisherName": {
                    "value": "[parameters('publisherName')]"
                  },
                  "publisherEmail": {
                    "value": "[parameters('publisherEmail')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.26.54.24096",
                      "templateHash": "14121679510030167266"
                    }
                  },
                  "parameters": {
                    "publisherEmail": {
                      "type": "string"
                    },
                    "publisherName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "West Europe"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ApiManagement/service",
                      "apiVersion": "2020-12-01",
                      "name": "[resourceGroup().name]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "sku": {
                        "name": "Consumption",
                        "capacity": 0
                      },
                      "properties": {
                        "virtualNetworkType": "None",
                        "publisherEmail": "[parameters('publisherEmail')]",
                        "publisherName": "[parameters('publisherName')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "acmebot",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "appNamePrefix": {
                    "value": "acmebot"
                  },
                  "mailAddress": {
                    "value": "spam@henrikbecker.se"
                  },
                  "acmeEndpoint": {
                    "value": "https://acme-v02.api.letsencrypt.org/"
                  },
                  "createWithKeyVault": {
                    "value": false
                  },
                  "keyVaultBaseUrl": {
                    "value": "[format('https://{0}{1}', variables('vaultName'), environment().suffixes.keyvaultDns)]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.5.6.12127",
                      "templateHash": "2656251470228326177"
                    }
                  },
                  "parameters": {
                    "appNamePrefix": {
                      "type": "string",
                      "maxLength": 14,
                      "metadata": {
                        "description": "The name of the function app that you wish to create."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "The location of the function app that you wish to create."
                      }
                    },
                    "mailAddress": {
                      "type": "string",
                      "metadata": {
                        "description": "Email address for ACME account."
                      }
                    },
                    "acmeEndpoint": {
                      "type": "string",
                      "defaultValue": "https://acme-v02.api.letsencrypt.org/",
                      "allowedValues": [
                        "https://acme-v02.api.letsencrypt.org/",
                        "https://api.buypass.com/acme/",
                        "https://acme.zerossl.com/v2/DV90/"
                      ],
                      "metadata": {
                        "description": "Certification authority ACME Endpoint."
                      }
                    },
                    "createWithKeyVault": {
                      "type": "bool",
                      "defaultValue": true,
                      "allowedValues": [
                        true,
                        false
                      ],
                      "metadata": {
                        "description": "If you choose true, create and configure a key vault at the same time."
                      }
                    },
                    "keyVaultSkuName": {
                      "type": "string",
                      "defaultValue": "standard",
                      "allowedValues": [
                        "standard",
                        "premium"
                      ],
                      "metadata": {
                        "description": "Specifies whether the key vault is a standard vault or a premium vault."
                      }
                    },
                    "keyVaultBaseUrl": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the base URL of an existing Key Vault. (ex. https://example.vault.azure.net)"
                      }
                    },
                    "roleNameGuid": {
                      "type": "string",
                      "defaultValue": "[newGuid()]",
                      "metadata": {
                        "description": "A new GUID used to identify the role assignment"
                      }
                    }
                  },
                  "variables": {
                    "functionAppName": "[format('func-{0}-{1}', parameters('appNamePrefix'), substring(uniqueString(resourceGroup().id, deployment().name), 0, 4))]",
                    "appServicePlanName": "[format('plan-{0}-{1}', parameters('appNamePrefix'), substring(uniqueString(resourceGroup().id, deployment().name), 0, 4))]",
                    "appInsightsName": "[format('appi-{0}-{1}', parameters('appNamePrefix'), substring(uniqueString(resourceGroup().id, deployment().name), 0, 4))]",
                    "workspaceName": "[format('log-{0}-{1}', parameters('appNamePrefix'), substring(uniqueString(resourceGroup().id, deployment().name), 0, 4))]",
                    "storageAccountName": "[format('st{0}func', uniqueString(resourceGroup().id, deployment().name))]",
                    "keyVaultName": "[format('kv-{0}-{1}', parameters('appNamePrefix'), substring(uniqueString(resourceGroup().id, deployment().name), 0, 4))]",
                    "appInsightsEndpoints": {
                      "AzureCloud": "applicationinsights.azure.com",
                      "AzureChinaCloud": "applicationinsights.azure.cn",
                      "AzureUSGovernment": "applicationinsights.us"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-06-01",
                      "name": "[variables('storageAccountName')]",
                      "location": "[parameters('location')]",
                      "kind": "Storage",
                      "sku": {
                        "name": "Standard_LRS"
                      },
                      "properties": {
                        "supportsHttpsTrafficOnly": true,
                        "allowBlobPublicAccess": false,
                        "minimumTlsVersion": "TLS1_2"
                      }
                    },
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2021-02-01",
                      "name": "[variables('appServicePlanName')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Y1",
                        "tier": "Dynamic",
                        "size": "Y1",
                        "family": "Y"
                      },
                      "properties": {}
                    },
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2021-06-01",
                      "name": "[variables('workspaceName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "name": "PerGB2018"
                        },
                        "retentionInDays": 30
                      }
                    },
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[variables('appInsightsName')]",
                      "location": "[parameters('location')]",
                      "kind": "web",
                      "tags": {
                        "[format('hidden-link:{0}/providers/Microsoft.Web/sites/{1}', resourceGroup().id, variables('functionAppName'))]": "Resource"
                      },
                      "properties": {
                        "Application_Type": "web",
                        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Web/sites",
                      "apiVersion": "2021-02-01",
                      "name": "[variables('functionAppName')]",
                      "location": "[parameters('location')]",
                      "kind": "functionapp",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "clientAffinityEnabled": false,
                        "httpsOnly": true,
                        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                        "siteConfig": {
                          "appSettings": [
                            {
                              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                              "value": "[format('InstrumentationKey={0};EndpointSuffix={1}', reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey, variables('appInsightsEndpoints')[environment().name])]"
                            },
                            {
                              "name": "AzureWebJobsStorage",
                              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', variables('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-06-01').keys[0].value, environment().suffixes.storage)]"
                            },
                            {
                              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', variables('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-06-01').keys[0].value, environment().suffixes.storage)]"
                            },
                            {
                              "name": "WEBSITE_CONTENTSHARE",
                              "value": "[toLower(variables('functionAppName'))]"
                            },
                            {
                              "name": "WEBSITE_RUN_FROM_PACKAGE",
                              "value": "https://shibayan.blob.core.windows.net/azure-keyvault-letsencrypt/v3/latest.zip"
                            },
                            {
                              "name": "FUNCTIONS_EXTENSION_VERSION",
                              "value": "~3"
                            },
                            {
                              "name": "FUNCTIONS_WORKER_RUNTIME",
                              "value": "dotnet"
                            },
                            {
                              "name": "Acmebot:Contacts",
                              "value": "[parameters('mailAddress')]"
                            },
                            {
                              "name": "Acmebot:Endpoint",
                              "value": "[parameters('acmeEndpoint')]"
                            },
                            {
                              "name": "Acmebot:VaultBaseUrl",
                              "value": "[if(parameters('createWithKeyVault'), format('https://{0}{1}', variables('keyVaultName'), environment().suffixes.keyvaultDns), parameters('keyVaultBaseUrl'))]"
                            },
                            {
                              "name": "Acmebot:Environment",
                              "value": "[environment().name]"
                            }
                          ],
                          "ftpsState": "Disabled",
                          "minTlsVersion": "1.2",
                          "scmMinTlsVersion": "1.2"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
                        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('createWithKeyVault')]",
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2019-09-01",
                      "name": "[variables('keyVaultName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "tenantId": "[subscription().tenantId]",
                        "sku": {
                          "family": "A",
                          "name": "[parameters('keyVaultSkuName')]"
                        },
                        "enableRbacAuthorization": true
                      }
                    },
                    {
                      "condition": "[parameters('createWithKeyVault')]",
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2021-04-01-preview",
                      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
                      "name": "[parameters('roleNameGuid')]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions/', 'a4417e6f-fecd-4de8-b567-7b0420556985')]",
                        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2021-02-01', 'full').identity.principalId]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
                        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "functionAppName": {
                      "type": "string",
                      "value": "[variables('functionAppName')]"
                    },
                    "principalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2021-02-01', 'full').identity.principalId]"
                    },
                    "tenantId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2021-02-01', 'full').identity.tenantId]"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "value": "[if(parameters('createWithKeyVault'), variables('keyVaultName'), '')]"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourcePrefix'))]"
      ]
    }
  ]
}